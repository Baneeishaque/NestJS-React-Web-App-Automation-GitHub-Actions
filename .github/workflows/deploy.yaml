name: Deploy API & Web

on:
  workflow_dispatch:
    inputs:
      server_user:
        description: 'SSH username for server'
        required: false
        default: 'ubuntu'

env:
  API_DIR: api
  WEB_DIR: web
  API_ZIP_NAME: api-dist.zip
  WEB_ZIP_NAME: web-dist.zip

jobs:
  build-and-deploy-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout api repository
        uses: actions/checkout@v4.2.2
        with:
          repository: ${{ secrets.API_REPO }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: ${{ env.API_DIR }}

      - name: Set up Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 18.20.3

      - name: Install dependencies
        run: npm install
        working-directory: ${{ env.API_DIR }}

      - name: Build API
        run: npm run build
        working-directory: ${{ env.API_DIR }}

      - name: Zip dist folder
        run: zip -r ${{ env.API_ZIP_NAME }} dist
        working-directory: ${{ env.API_DIR }}

      - name: Ensure target directory exists and is writable
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ github.event.inputs.server_user }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo mkdir -p ~/${{ secrets.APP_NAME }}
            sudo chown $USER:$USER ~/${{ secrets.APP_NAME }}

      - name: Copy dist.zip to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ github.event.inputs.server_user }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "${{ env.API_DIR }}/${{ env.API_ZIP_NAME }}"
          target: "/home/${{ github.event.inputs.server_user }}/${{ secrets.APP_NAME }}/"
          overwrite: true

      - name: SSH Deploy API
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ github.event.inputs.server_user }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/${{ secrets.APP_NAME }} || exit 1
            if [ -f ${{ env.API_ZIP_NAME }} ]; then sudo unzip -o ${{ env.API_ZIP_NAME }}; else echo "${{ env.API_ZIP_NAME }} not found!"; exit 1; fi

  build-and-deploy-web:
    runs-on: ubuntu-latest
    needs: build-and-deploy-api
    steps:
      - name: Checkout web repository
        uses: actions/checkout@v4.2.2
        with:
          repository: ${{ secrets.WEB_REPO }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: ${{ env.WEB_DIR }}

      - name: Set up Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 18.20.3

      - name: Install dependencies
        run: npm install
        working-directory: ${{ env.WEB_DIR }}

      - name: Set production baseURL in axios.js
        run: |
          sed -i.bak 's|baseURL: "http://localhost:3000/",|baseURL: "/",|g' src/axios/axios.js
        working-directory: ${{ env.WEB_DIR }}

      - name: Show axios baseURL for verification
        run: grep baseURL src/axios/axios.js
        working-directory: ${{ env.WEB_DIR }}

      - name: Build Web
        run: npm run build
        working-directory: ${{ env.WEB_DIR }}

      - name: Zip dist contents as client-dist.zip
        run: cd dist && zip -r ../${{ env.WEB_ZIP_NAME }} . && cd ..
        working-directory: ${{ env.WEB_DIR }}

      - name: Ensure web target directory exists and is writable
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ github.event.inputs.server_user }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo mkdir -p ~/${{ secrets.APP_NAME }}/client
            sudo chown $USER:$USER ~/${{ secrets.APP_NAME }}/client

      - name: Copy client-dist.zip to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ github.event.inputs.server_user }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "${{ env.WEB_DIR }}/${{ env.WEB_ZIP_NAME }}"
          target: "/home/${{ github.event.inputs.server_user }}/${{ secrets.APP_NAME }}/client/"
          overwrite: true

      - name: SSH Deploy Web
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ github.event.inputs.server_user }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/${{ secrets.APP_NAME }}/client || exit 1
            if [ -f ${{ env.WEB_ZIP_NAME }} ]; then sudo unzip -o ${{ env.WEB_ZIP_NAME }}; else echo "${{ env.WEB_ZIP_NAME }} not found!"; exit 1; fi

  restart-services:
    runs-on: ubuntu-latest
    needs: [build-and-deploy-api, build-and-deploy-web]
    steps:
      - name: Restart pm2 and nginx
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ github.event.inputs.server_user }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/${{ secrets.APP_NAME }}
            pm2 restart ${{ secrets.APP_NAME }} || pm2 start dist/main.js --name ${{ secrets.APP_NAME }}
            sudo systemctl restart nginx